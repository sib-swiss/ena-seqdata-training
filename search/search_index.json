{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Course website","text":""},{"location":"#material","title":"Material","text":"<ul> <li>This website</li> <li>Zoom meeting (through mail)</li> <li>Google doc (through mail)</li> <li>Slack channel</li> </ul>"},{"location":"#learning-outcomes","title":"Learning outcomes","text":""},{"location":"#general-learning-outcomes","title":"General learning outcomes","text":"<p>After this course, you will be able to:</p>"},{"location":"#learning-outcomes-explained","title":"Learning outcomes explained","text":"<p>To reach the general learning outcomes above, we have set a number of smaller learning outcomes. Each chapter starts with these smaller learning outcomes. Use these at the start of a chapter to get an idea what you will learn. Use them also at the end of a chapter to evaluate whether you have learned what you were expected to learn.</p>"},{"location":"#learning-experiences","title":"Learning experiences","text":"<p>To reach the learning outcomes we will use lectures, exercises, polls and group work. During exercises, you are free to discuss with other participants. During lectures, focus on the lecture only.</p>"},{"location":"#exercises","title":"Exercises","text":"<p>Each block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we\u2019ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different.</p>"},{"location":"#asking-questions","title":"Asking questions","text":"<p>During lectures, you are encouraged to raise your hand if you have questions (if in-person), or use the Zoom functionality (if online). Find the buttons in the participants list (\u2018Participants\u2019 button):</p> <p>Alternatively, (depending on your zoom version or OS) use the \u2018Reactions\u2019 button:</p> <p>A main source of communication will be our slack channel. Ask background questions that interest you personally at #background. During the exercises, e.g. if you are stuck or don\u2019t understand what is going on, use the slack channel #q-and-a.  This channel is not only meant for asking questions but also for answering questions of other participants. If you are replying to a question, use the \u201creply in thread\u201d option:</p> <p>The teacher will review the answers, and add/modify if necessary. If you\u2019re really stuck and need specific tutor support, write the teachers or helpers personally.</p> <p>To summarise:</p> <ul> <li>During lectures: raise hand/zoom functionality</li> <li>Personal interest questions: #background</li> <li>During exercises: #q-and-a on slack</li> </ul>"},{"location":"course_schedule/","title":"Course schedule","text":"start end topic 09:15 09:45 Introductions 09:45 10:30 Lecture: Introduction to raw sequence databases 10:30 11:00 Break 11:00 12:00 Exercise: finding and downloading raw sequence data 12:00 13:00 Lunch 13:00 13:30 Lecture: metadata &amp; submitting sequences 13:30 15:00 Exercise: submitting raw sequence reads to ENA 15:00 15:30 Break 15:30 17:00 BYOD or submitting data with Webin-cli"},{"location":"precourse/","title":"Precourse preparations","text":""},{"location":"precourse/#knowledge-competencies","title":"Knowledge / competencies","text":"<p>Participants are expected to have basic knowledge on common next generation sequencing data types (e.g. fasta, fastq, bam). Experience with the command line (either UNIX or Windows) is a plus.</p>"},{"location":"precourse/#technical","title":"Technical","text":"<p>Participants are required to bring their own personal computer with FileZilla pre-installed.</p>"},{"location":"course_content/finding_downloading/","title":"Finding and downloading","text":"<p>Our story</p> <p>Our project Genetic variation of listeria in the cow brain has the aim to gain knowledge about the genetic variability of listeria. At the start of the project, we want to know what kind of data is already available, and see whether we can re-analyze it to understand the genetic variation of Listeria monocytogenes associated with cows.</p>"},{"location":"course_content/finding_downloading/#exercises","title":"Exercises","text":""},{"location":"course_content/finding_downloading/#finding-data","title":"Finding data","text":"<p>You are asked to figure out what kind of raw sequencing data is already available to do the analysis. As a start, we go to the ENA search page, and type in Listeria monocytogenes  in the search box. </p> <p>Exercise: Look for Listeria monocytogenes in the general search. Do you find many raw read datasets? Are they all relevant to our question? </p> Answer <p>At time of writing I find 28,613 runs associated with Listeria monocytogenes. They probably aren\u2019t all useful. For example, we are interested in Listeria associated with cows, and probably most of those entries have a different origin (e.g. food/lab). In addition, some might contain only a part of the genome because it\u2019s enriched by e.g. PCR, and there is variation in the sequencing technology used, which could complicate our downstream analysis. </p> <p>We probably want to search a bit more specific. Go to the advanced search page. We will be looking for raw reads. Let\u2019s search for the following characteristics:</p> <ul> <li>Organism Listeria monocytogenes</li> <li>Illumina whole genome sequencing</li> <li>Host: cow (Bos taurus)</li> </ul> <p>Build a query by selecting the boxes and selecting and specifying fields. Have a particular look at:</p> <ul> <li>Taxonomy and related</li> <li>Host information</li> <li>Sequencing information</li> </ul> <p>Hint</p> <p>Find the description of all possible fields here. </p> <p>You\u2019ll notice that a search query will appear at the top of the page. What does your query look like?</p> Answer <p>Here\u2019s an example of a query you could end up with: <pre><code>tax_eq(1639) AND host_scientific_name=\"Bos taurus\" AND instrument_platform=\"ILLUMINA\" AND library_strategy=\"WGS\"\n</code></pre></p> <p>Ignore the other steps for now and click \u2018Search\u2019. You will find the accession and the Run accession and the description of the run. </p> <p>Exercise: What kind of other information would you want to evaluate our search? </p> Answer <p>Some information that might be nice:</p> <ul> <li>To which original study and sample the run belongs</li> <li>The host information</li> <li>Where to find the data files</li> <li>Date of sampling/submission</li> <li>The geographic origin</li> <li>The strain/serotype</li> </ul> <p>You can change the results fields by going two steps back in the fields selection page. </p> <p>Exercise: Navigate to the \u2018Fields\u2019 page, and select Manually select fields to select fields that interest you and correspond to the required information in the answer above. Find all field descripts here.</p> Answer <p>Here\u2019s an example of the fields you could have selected:</p> <pre><code>study_accession,library_selection,country,collection_date,first_public,strain,host,host_status,isolation_source,serotype,submitted_ftp,fastq_ftp\n</code></pre> <p>Download the results as tsv. Are there many researchers that specified the serotype or strain? How about the isolation source?</p>"},{"location":"course_content/finding_downloading/#downloading-data-through-ftp","title":"Downloading data through ftp","text":"<p>There are quite a few ways to download data from ENA/ISNDC:</p> <ul> <li>Through FTP:<ul> <li>From the command line with <code>wget</code> or <code>curl</code></li> <li>With FileZilla</li> </ul> </li> <li>Through the command line with SRA tools with <code>prefetch</code> and <code>fasterq-dump</code></li> <li>Via SRA cloud delivery</li> </ul> <p>Nextflow pipeline</p> <p>With the nf-core pipeline fetchngs, it\u2019s easy to download sequencing reads from SRA/ENA and have them in the right format for downstream processing with other nf-core pipelines.</p> <p>In the exercises below we will use FileZilla to download some files of interest. </p> <p>Make sure that you have specified <code>submitted_ftp</code> and <code>fastq_ftp</code> at Fields. After that, at Results download the report in tsv format (Download report &gt; TSV). Open the downloaded TSV in your favourite spreadsheet program, and pick a sequencing run with both submitted data and fastq data available. For example, you can use <code>ERR10549500</code>. </p> <p>File size</p> <p>In the exercises, you will download the files. Find a sequencing run that\u2019s not too big, to do that, you can include <code>submitted_bytes</code> and/or <code>fastq_bytes</code> at Fields </p> <p>Now we\u2019ll browse the files with Filezilla. To do that we need the links provided at the columns <code>submitted_ftp</code> and <code>fastq_ftp</code>. The first part is the address to the FTP server: <code>ftp.sra.ebi.ac.uk</code>. To connect to that we make a connection with FileZilla:</p> <ul> <li>File &gt; Site Manager..</li> <li>Click New Site</li> <li>Give the connection a name e.g. \u2018ENA SRA\u2019</li> <li>Specify at Host <code>ftp.sra.ebi.ac.uk</code></li> <li>At Logon Type specify Anonymous</li> </ul> <p>Connect to the server. Now at the right panel you can browse to the paths in the links. To browse to the directory with the submitted data for <code>ERR10549405</code>, you can go to <code>/vol1/run/ERR105/ERR10549500/</code>. </p> <p>Exercise For your sample of interest, download a submitted file and the SRA fastq file. What are the differences? </p> Answer <p>The first eight lines of the SRA fastq file looks like this:</p> <pre><code>@ERR10549500.1 NB502092:214:HCYYFAFX3:1:11101:10005:17165/1\nAATTTCACCTTCATTAATAGATTTTTTTCTTTTAACGTCTTATAATGAAATGGAACCGAGAACATACGCGAATATGTTCTCGGCTCATTTCTAAGGATGACTACTGTAAAACATCTGAGCCCGAGAAGCTTTGGATTCGTTTGCACGGTTA\n+\nAAAAAE/A&lt;EEEEEE/AA6EE6EEEE/EEEEEEEEEEEE//A/AAEAAEEE//AAEAEEAE/EEEEE&lt;&lt;E&lt;EEE/&lt;AAEEA/&lt;/6EE/&lt;/EEA/6/EEAEEAEE&lt;/EE&lt;EEEEEEAAEA//66E&lt;AAA&lt;EE/&lt;&lt;&lt;EE&lt;A/&lt;//6A/6/EE/\n@ERR10549500.2 NB502092:214:HCYYFAFX3:1:11101:10012:8474/1\nATCCTTATCTAATCACTTCTATCGCTGTGTTCTACGATGATTTATACGCAGCAACAGAAGGCACTTTTACAGAAGAAACGGTCATCGTGGAAGAAGAAGTAAATCCATTTGGAACAACAGAAGCTGATCCATTTGCTGAAGATACACATC\n+\nAAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE&lt;EEEEEAEEEEEEEAEEAEEEEEEEEEEEE/EEEEEEEEEEEEEEEEEEEEEAEAEEEEE&lt;EEAEEEE&lt;AEE/EE/EEEEAAE&lt;\n</code></pre> <p>While for the submitted file it looks like:</p> <pre><code>@NB502092:214:HCYYFAFX3:1:11101:19008:1109 1:N:0:GCTCATGA+NTAGCCTT\nGACTTNTTGGGATTAGTGAAGGGGCAATTCCTTTCGCGGTAGAATCTCCGCTTAAAGTTATTCCGGCTACGGTTCTTGGTTCTGCTGTCGGCGGGGCACTAGCTGTAGGTCTTGGCGCAATTAACCAAGCGCCAATCAGTGGTTTTTATGG\n+\nAAAAA#/EEAE6EEAEEE/EEEEAEE/AEEEEE/AAEE/AAEE/EEEEAAEAEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEAAEEE&lt;EEEEEEEEEEEE/E&lt;EE/AEE&lt;EEEEAEEEE/EEE/AEEEEEA&lt;EAEEAEE/E&lt;E/EA&lt;\n@NB502092:214:HCYYFAFX3:1:11101:9681:1109 1:N:0:GCTCATGA+NTAGCCTT\nGACTGNACAGATGTGCCGATGTTTGTTAAACAAGGTGCCATTATGCCAATGCAACAACCACAAAACTATGTTGGCGAATCCGCAGTCAAAACAATTTATTTAGACACTTTTGCATCAGATAAAGAGACATCCTTTACACATTACGATGACG\n+\nAAAAA#EAEEEEEEEEEEEEEEEEEEEEEEEEEEEAEAEEEEEEEE/E/EEEEEEE/EEEEEEEEEEAAEAEEEEEEEEE6EEEEEEEEAAEEE/EEE/E&lt;AAAE/A&lt;&lt;EEEAEA6EEAEEEEEAEEEE/AEEEEAE/AEAAE&lt;AEAAAA&lt;\n</code></pre> <p>So, apparantly both the order and the titles are different. They both have the same number of reads:</p> <pre><code>gunzip -c ERR10549500_1.fastq.gz| wc -l\ngunzip -c DTU_2022_1015394_2_SI_JC98_R1_001.fq.gz | wc -l\n</code></pre> <p>Both return 3657672</p> <p>Using <code>wget</code></p> <p>Of course, if you have a lot of runs you need to download, or if you are downloading to e.g. a remote cluster with only a commmand line interface, you can use <code>wget</code> or <code>curl</code>. For our exercise, the commands for <code>wget</code> would look like this:</p> <pre><code># SRA fastq\nwget ftp.sra.ebi.ac.uk/vol1/fastq/ERR105/000/ERR10549500/ERR10549500_1.fastq.gz\n# submitted fastq\nwget ftp.sra.ebi.ac.uk/vol1/run/ERR105/ERR10549500/DTU_2022_1015394_2_SI_JC98_R1_001.fq.gz\n</code></pre>"},{"location":"course_content/submitting/","title":"Submitting","text":"<p>Our story</p> <p>Our project Genetic variation of listeria in the cow brain has the aim to gain knowledge about the genetic variability of listeria. As a first step, we isolated Listeria monocytogenes from two different cow milk samples (sample LIS001 and LIS002). The milk was collected at January 2022 at two dairy farms, one near Bern (CH), and the other near Fribourg (CH). We received them on February 2nd of the same year in our lab. By whole genome sequencing we found out that LIS001 belongs to serotype 4b and LIS002 to serotype 1/2b. We performed paired-end sequencing on an Illumina MiSeq (2 x 150 bp) on DNA extracted from both isolates. You can find the raw reads here. </p>"},{"location":"course_content/submitting/#exercises","title":"Exercises","text":"<p>You are asked to submit the reads to a repository EBI. First, figure out what the best submission strategy is at the submission wizard. </p> Answer <p>After answering the questions, you probably conclude you should submit to ENA. </p> <p>If you haven\u2019t already got one, make a Webin account. After the creation of the Webin account we will continue in the dev environment at https://wwwdev.ebi.ac.uk/ena/browser/home. </p> <p>From now on dev environment!</p> <p>Make sure you use the dev environment https://wwwdev.ebi.ac.uk/ena/browser/home. Otherwise the reads will be submitted and stay at ENA!</p> <p>We will follow the route Submit to ENA using the Webin Portal, which requires four steps. </p>"},{"location":"course_content/submitting/#1-register-study","title":"1. Register study","text":"<p>A study (or project) is an entity describing a research project. Typically this is at the level of a research grant. This make it e.g. easy to find data from multiple experiments from the same study. Click on Register study and fill out the form for the project described above. </p> <p>Note</p> <p>The descriptions do not have to belong for this example. Typically, you can copy-paste this information from e.g. the research proposal. </p>"},{"location":"course_content/submitting/#2-register-samples","title":"2. Register samples","text":"<p>Go back to the submission portal main page, and click Register samples. Start by finding a sample template. </p> <p>Exercise: What would be the most appropriate template for our project?</p> Answer <p>Listeria monocytogenes is a pathogen, so as checklist group we select Pathogens Checklists. It is food-borne, so the first one COMPARE-ECDC-EFSA pilot food-associated reporting standard could be appropriate. However, we can\u2019t specify the host (cow) in there. So we choose the alternative: ENA prokaryotic pathogen minimal sample checklist. </p> <p>Exercise: Check out all fields (including recommended and optional). Any field you want to add/remove? </p> Answer <p>We don\u2019t have information about where the samples were exactly collected, so we can uncheck <code>lat_lon</code> at \u2018Recommended fields\u2019. We can also uncheck <code>strain</code> because we don\u2019t have any strain information. </p> <p>Exercise: Now download the template as tsv, and edit it in e.g. excel for our two samples (LIS001 and LIS002). Do not change the first three lines. For your convenenience, keep the field description open, so you know what to fill out. </p> <p>Hint</p> <p>In order to find the taxonomy ID (<code>tax_id</code>), use NCBI Taxonomy to find it. </p> Answer <p>You can find an example of a \u2018correctly\u2019 filled out table here.</p>"},{"location":"course_content/submitting/#3-upload-reads","title":"3. Upload reads","text":"<p>Before we submit the reads, we first need to upload them. We will use the ftp protocol with FileZilla.</p> <p>Note</p> <p>Find all ways to upload sequence reads to ENA here.</p> <p>Get the reads we will submit here. After downloading, extract the tar file. </p> <p>To upload the reads, create a new Site that connects to <code>ftp://webin2.ebi.ac.uk</code> in FileZilla:</p> <ul> <li>File &gt; Site Manager..</li> <li>Click New Site</li> <li>Give the connection a name e.g. \u2018webin upload\u2019</li> <li>Specify at Host <code>webin2.ebi.ac.uk</code></li> <li>At User and Password specify your Webin username and password</li> </ul> <p>After filling out the connection details, click Connect to connect to your personal space on the ftp server.</p> <p>If the connection was successful, browse to the sequence files on your local computer in the left pane, and drag them to the window on the right pane (the ftp server). </p>"},{"location":"course_content/submitting/#4-submit-reads-metadata","title":"4. Submit Reads metadata","text":"<p>Go back to the submission portal main page, and click Submit reads. Like with the samples, we will download and fill out a template. </p> <p>Exercise Check out the template choices. What would be the most appropriate template?</p> Answer <p>We have paired fastq files, so we\u2019ll choose Submit paired reads using two Fastq files. </p> <p>Exercise: Again check out the mandatory and optional fields. Any field you would like to add from Optional Fields?</p> <p>Check \u2018Show Description\u2019</p> <p>The descriptions do not show by default for the read submission template. View it by checking \u2018Show Description\u2019 at the top of the page. </p> Answer <p>No, probably nothing to add because we don\u2019t have that information. If you have this kind of info, don\u2019t hesitate to add it!</p> <p>You have probably seen the fields \u2018forward_file_md5\u2019 and \u2018reverse_file_md5\u2019. md5 checksums are used to check whether the file transfer has completed completely without error. You can calculate them like this:</p> Linux/MacOS/WSLWindows <pre><code>md5sum *.fastq.gz\n</code></pre> <pre><code>CertUtil -hashfile LIS001_R1.fastq.gz MD5\nCertUtil -hashfile LIS001_R2.fastq.gz MD5\nCertUtil -hashfile LIS002_R1.fastq.gz MD5\nCertUtil -hashfile LIS002_R2.fastq.gz MD5\n</code></pre> <p>Exercise: download the template and fill out the required information.  Check the field description and permitted values in the template description. You can also find an overview of permitted values here.</p> Answer <p>You can find a \u2018correctly\u2019 filled out table here. </p> <p>Now you can upload the file at Upload filled spreadsheet template for Read submission, and the website will tell you if it has been submitted successfully. Now at the side of ENA the files and md5 sums will be checked. If that has occurred successfully (usually occuring over night) you\u2019re all set! At Run files report you can check the status of the files. </p>"},{"location":"course_content/submitting/#extra-submit-with-webin-cli","title":"Extra: submit with webin CLI","text":"<p>Submission though webin CLI requires the same steps for registering a study and registering samples. However, the process of submitting the reads is done programatically. A general overview on how to use Webin CLI for reads can be at the ENA docs. </p> <p>To do these exercises, follow these instructions to install Webin CLI locally. </p> <p>Submitting with Webin-CLI starts with creating a json manifest file, in which you specify the metdata associated with your reads. This metadata json basically contains the same information as in the read submission template that we have created above. Here\u2019s an mostly empty example:</p> manifest.json<pre><code>{\n\"study\": \"PRJEB00000\",\n\"sample\": \"ERS00000000\",\n\"name\": \"\",\n\"platform\": \"\",\n\"instrument\": \"\",\n\"libraryName\": \"\",\n\"library-source\": \"\",\n\"library_selection\": \"\",\n\"libraryStrategy\": \"\",\n\"fastq\": [\n\n{\n\"value\": \"LIS001_R1.fastq.gz\",\n\"attributes\": {\n\"read_type\": \"paired\"\n}\n},\n{\n\"value\": \"LIS001_R2.fastq.gz\",\n\"attributes\": {\n\"read_type\": \"paired\"\n}\n}\n]\n}\n</code></pre> <p>Creating json files</p> <p>Typically such a json files is generated programmatically with e.g. R or python. </p> <p>Exercise fill out this json for the reads associated with LIS001. Use the ENA docs to find the permitted values. </p> Answer <p>Here\u2019s an example. Note that <code>study</code> and <code>sample</code> are likely different for you. </p> manifest_LIS001.json<pre><code>{\n\"study\": \"PRJEB62850\",\n\"sample\": \"ERS15567929\",\n\"name\": \"LIS001\",\n\"platform\": \"ILLUMINA\",\n\"instrument\": \"Illumina MiSeq\",\n\"libraryName\": \"LIS001\",\n\"library-source\": \"GENOMIC\",\n\"library_selection\": \"RANDOM\",\n\"libraryStrategy\": \"WGS\",\n\"fastq\": [\n{\n\"value\": \"LIS001_R1.fastq.gz\",\n\"attributes\": {\n\"read_type\": \"paired\"\n}\n},\n{\n\"value\": \"LIS001_R2.fastq.gz\",\n\"attributes\": {\n\"read_type\": \"paired\"\n}\n}\n]\n}\n</code></pre> <p>Now, we can use Webin CLI to validate and submit the reads. On a UNIX-based system it would look like this:</p> <pre><code>java -jar webin-cli-6.4.1.jar \\\n-context reads \\\n-userName Webin-XXXXX \\\n-password \"$WEBIN_PW\" \\\n-manifest manifest.json \\\n-outputDir . \\\n-validate \\\n-submit \\\n-test\n</code></pre> <p>Exercise Make sure that you have the webin-cli executable, manifest file and reads are in the same directory and run the command. </p> <p>Hint</p> <p>You can store you password in a variable like this:</p> <pre><code>export WEBIN_PW=mywebinpassword\n</code></pre> <p>Warning</p> <p>Make sure to add the <code>-test</code> option, otherwise Webin CLI will try to submit your reads!</p>"}]}